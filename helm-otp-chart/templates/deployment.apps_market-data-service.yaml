apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: market-data-service
  name: market-data-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: market-data-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: market-data-service
    spec:
      shareProcessNamespace: true
      containers:
      - env:
        - name: MDS_ID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        #image: {{ .Values.dockerRepo }}/otp-market-data-service:{{ .Values.dockerTag }}
        image: ettec/otp-market-data-service:1.1.0
        imagePullPolicy: Always
        name: market-data-service
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - name: splunk-go-instrumentation
        image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:v0.14.0-alpha
        imagePullPolicy: IfNotPresent
        env:
          - name: NODE_IP
            valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          - name: OTEL_GO_AUTO_TARGET_EXE
            value: "/app/service"
          - name: OTEL_TRACES_EXPORTER
            value: "otlp"
          - name:  OTEL_EXPORTER_OTLP_PROTOCOL
            value: "grpc"
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://$(NODE_IP):4317"
          - name: OTEL_SERVICE_NAME
            value: "market-data-service"
          - name: OTEL_PROPAGATORS
            value: "tracecontext,baggage"
          - name: OTEL_GO_AUTO_GLOBAL
            value: "true"
          - name: OTEL_LOG_LEVEL
            value: "debug"
        securityContext:
          runAsUser: 0
          privileged: true        
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: otpservice
      serviceAccountName: otpservice
      terminationGracePeriodSeconds: 30

